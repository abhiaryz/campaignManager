# Generated by Django 5.0.6 on 2025-01-14 19:07

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0011_campaign_end_time_campaign_start_time"),
    ]

    operations = [
        migrations.CreateModel(
            name="proximity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(blank=True, null=True, upload_to="proximity/"),
                ),
                (
                    "uploaded_at",
                    models.DateTimeField(blank=True, default=datetime.datetime.now),
                ),
            ],
        ),
        migrations.CreateModel(
            name="proximity_store",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True, null=True, upload_to="proximity_store/"
                    ),
                ),
                (
                    "uploaded_at",
                    models.DateTimeField(blank=True, default=datetime.datetime.now),
                ),
            ],
        ),
        migrations.CreateModel(
            name="weather",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(blank=True, null=True, upload_to="weather/")),
                (
                    "uploaded_at",
                    models.DateTimeField(blank=True, default=datetime.datetime.now),
                ),
            ],
        ),
        migrations.RemoveField(
            model_name="campaign",
            name="exchange_selection",
        ),
        migrations.AddField(
            model_name="campaign",
            name="exchange",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="campaign",
            name="carrier",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="campaign",
            name="device_price",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="campaign",
            name="language",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.RemoveField(
            model_name="campaign",
            name="proximity",
        ),
        migrations.RemoveField(
            model_name="campaign",
            name="proximity_store",
        ),
        migrations.RemoveField(
            model_name="campaign",
            name="weather",
        ),
        migrations.AddField(
            model_name="campaign",
            name="proximity",
            field=models.ManyToManyField(
                blank=True, related_name="proximity", to="api.proximity"
            ),
        ),
        migrations.AddField(
            model_name="campaign",
            name="proximity_store",
            field=models.ManyToManyField(
                blank=True, related_name="proximity_store", to="api.proximity_store"
            ),
        ),
        migrations.AddField(
            model_name="campaign",
            name="weather",
            field=models.ManyToManyField(
                blank=True, related_name="weather", to="api.weather"
            ),
        ),
    ]
